C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE WATER_LEVEL_MONITORING___PUMP_CONTROLLER
OBJECT MODULE PLACED IN .\Objects\Water_Level_Monitoring_ _Pump_Controller.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Water_Level_Monitoring_&_Pump_Controller.c OPTIMIZE(8,SPEED) BROWSE DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\Water_Level_Monitoring_ _Pump_Controller.lst) TABS(2) OBJECT(.\Objects\Water_Level_Monit
                    -oring_ _Pump_Controller.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>  // For _nop_() used in delay_us()
   3          #define number "+9779745306616"
   4          
   5          // ================== LCD Pin Configuration ==================
   6          #define LCD_data P2 // LCD connected to Port 2
   7          
   8          sbit RS = P1^0;
   9          sbit RW = P1^1;
  10          sbit EN = P1^2;
  11          
  12          // ================== Ultrasonic Sensor1 Pins ==================
  13          sbit TRIG_PIN = P1^4;
  14          sbit ECHO_PIN = P1^5;
  15          
  16          
  17          // ================== Ultrasonic Sensor2 Pins ==================
  18          sbit TRIG_PIN1 = P1^6;
  19          sbit ECHO_PIN1 = P1^7;
  20          
  21          sbit mr = P1^3;
  22          
  23              unsigned long duration, height;
  24              unsigned long duration1, height1;
  25          
  26          
  27          void delay(unsigned int time) {
  28   1          unsigned int i, j;
  29   1          for (i = 0; i < time; i++)
  30   1              for (j = 0; j < 1275; j++);
  31   1      }
  32          
  33          void delay_us(unsigned int us) {
  34   1          while(us--) {
  35   2              _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); // ~1us delay
  36   2          }
  37   1      }
  38          
  39          void sim_init() {
  40   1          SCON = 0x50;        // Mode 1: 8-bit UART, REN enabled
  41   1          TMOD = TMOD & 0x0F; // Clear Timer1 bits
  42   1          TMOD |= 0x20;       // Timer1 Mode 2: Auto-reload
  43   1          TH1 = 0xFD;         // 9600 baud rate (11.0592 MHz)
  44   1          TL1 = 0xFD;
  45   1          TR1 = 1;            // Start Timer1
  46   1          delay(500);        // Add 1–2 seconds delay for SIM800L to stabilize
  47   1      }
  48          
  49          void tx(unsigned char send)
  50          {
  51   1          SBUF = send;
  52   1          while(TI==0);
  53   1          TI=0;   //reset the timer interrupt
C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 2   

  54   1      }
  55          
  56          void tx_string(unsigned char *s)
  57          {
  58   1          while(*s)
  59   1              tx(*s++);
  60   1      }
  61          
  62          void sms( unsigned char *msg)
  63          {
  64   1          tx_string("AT");
  65   1          tx(0x0d); 
  66   1          //tx(0x0a);  // Try both CR and LF
  67   1          delay(100);
  68   1      
  69   1          tx_string("AT+CMGF=1");
  70   1          tx(0x0d); //tx(0x0a);
  71   1          delay(100);
  72   1        
  73   1          tx_string("AT+CMGS=");
  74   1          tx('"');
  75   1          tx_string(number);
  76   1          tx('"');
  77   1          tx(0x0d); 
  78   1          delay(100); 
  79   1      
  80   1        tx_string(msg);
  81   1          tx(0x1A); 
  82   1          delay(100);
  83   1      }
  84          
  85          
  86          void LCD_cmd(unsigned char command) {
  87   1          LCD_data = command;
  88   1          RS = 0;
  89   1          RW = 0;
  90   1          EN = 1;
  91   1          delay(2);
  92   1          EN = 0;
  93   1      }
  94          
  95          void LCD_data_write(unsigned char dataa) {
  96   1          LCD_data = dataa;
  97   1          RS = 1;
  98   1          RW = 0;
  99   1          EN = 1;
 100   1          delay(2);
 101   1          EN = 0;
 102   1      }
 103          
 104          void LCD_string_write(unsigned char *string) {
 105   1          while (*string != '\0') {
 106   2              LCD_data_write(*string++);
 107   2          }
 108   1      }
 109          
 110          void LCD_init(void) {
 111   1          LCD_cmd(0x38); // 8-bit, 2-line, 5x7 dots
 112   1          LCD_cmd(0x0C); // Display ON, Cursor OFF
 113   1          LCD_cmd(0x06); // Entry mode
 114   1          LCD_cmd(0x01); // Clear screen
 115   1          delay(2);
C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 3   

 116   1      }
 117          
 118          void num_to_string(unsigned long num, char *buf) {
 119   1          unsigned char i = 0, j;
 120   1          char temp[10];
 121   1          if (num == 0) {
 122   2              buf[0] = '0';
 123   2              buf[1] = '\0';
 124   2              return;
 125   2          }
 126   1          while (num > 0) {
 127   2              temp[i++] = (num % 10) + '0';
 128   2              num /= 10;
 129   2          }
 130   1          for (j = 0; j < i; j++) {
 131   2              buf[j] = temp[i - 1 - j];
 132   2          }
 133   1          buf[j] = '\0';
 134   1      }
 135          
 136          void trigger_sensor(void) {
 137   1          TRIG_PIN = 0;
 138   1          delay_us(1);
 139   1          TRIG_PIN = 1;
 140   1          delay_us(10);
 141   1          TRIG_PIN = 0;
 142   1      }
 143          
 144          void trigger_sensor1(void) {
 145   1          TRIG_PIN1 = 0;
 146   1          delay_us(1);
 147   1          TRIG_PIN1 = 1;
 148   1          delay_us(10);
 149   1          TRIG_PIN1 = 0;
 150   1      }
 151          
 152          unsigned long measure_distance(void) {
 153   1          unsigned long dura = 0;
 154   1          unsigned int timer_value;
 155   1      
 156   1          while (ECHO_PIN == 0); // Wait for echo to start
 157   1          TMOD = (TMOD & 0xF0) | 0x01; // Timer 0, Mode 1
 158   1          TH0 = 0;
 159   1          TL0 = 0;
 160   1          TR0 = 1;
 161   1      
 162   1          while (ECHO_PIN == 1); // Wait for echo to end
 163   1          TR0 = 0;
 164   1      
 165   1          timer_value = (TH0 << 8) | TL0;
 166   1          dura = (unsigned long)timer_value * 1085 / 1000; // Approx µs
 167   1      
 168   1          return dura;
 169   1      }
 170          
 171          unsigned long measure_distance1(void) {
 172   1          unsigned long dura1 = 0;
 173   1          unsigned int timer_value;
 174   1      
 175   1          while (ECHO_PIN1 == 0); // Wait for echo to start
 176   1          TMOD = (TMOD & 0xF0) | 0x01; // Timer 0, Mode 1
 177   1          TH0 = 0;
C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 4   

 178   1          TL0 = 0;
 179   1          TR0 = 1;
 180   1      
 181   1          while (ECHO_PIN1 == 1); // Wait for echo to end
 182   1          TR0 = 0;
 183   1      
 184   1          timer_value = (TH0 << 8) | TL0;
 185   1          dura1 = (unsigned long)timer_value * 1085 / 1000; // Approx µs
 186   1      
 187   1          return dura1;
 188   1      }
 189          
 190          void calculate_distance_cm(unsigned long duration, unsigned long *cm_out) {
 191   1        
 192   1          unsigned long distance_cm = duration / 58; // Convert µs to cm
 193   1          if (distance_cm > 100)
 194   1              distance_cm = 100;
 195   1          *cm_out = 100- distance_cm; // Convert to percentage (0 cm = 100%, 100 cm = 0%)
 196   1      }
 197          
 198          void lcd_display_height(unsigned long height) {
 199   1          char height_str[5];
 200   1          LCD_cmd(0x80);  // First line
 201   1          LCD_string_write("Tank 2: ");
 202   1      
 203   1          num_to_string(height, height_str);
 204   1          LCD_string_write(height_str);
 205   1          LCD_string_write(" %");
 206   1      }
 207          
 208          void lcd_display_height1(unsigned long height) {
 209   1          char height_str[5];
 210   1          LCD_cmd(0xC0);  // First line
 211   1          LCD_string_write("Tank 1: ");
 212   1      
 213   1          num_to_string(height, height_str);
 214   1          LCD_string_write(height_str);
 215   1          LCD_string_write(" %");
 216   1      }
 217          
 218          
 219          void ret_distance(void){
 220   1              trigger_sensor();
 221   1              duration = measure_distance();
 222   1              calculate_distance_cm(duration, &height);
 223   1              lcd_display_height(height);
 224   1      }
 225          
 226          void ret_distance1(void){
 227   1              trigger_sensor1();
 228   1              duration1 = measure_distance1();
 229   1              calculate_distance_cm(duration1, &height1);
 230   1              lcd_display_height1(height1);
 231   1      }
 232          
 233          void main(void) {
 234   1      
 235   1          mr = 0;
 236   1          LCD_init();
 237   1          LCD_cmd(0x80);
 238   1          LCD_string_write("CHECKING WATER");
 239   1          LCD_cmd(0xC0);
C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 5   

 240   1          LCD_string_write("     LEVEL");
 241   1          delay(500);
 242   1          LCD_cmd(0x01);
 243   1        
 244   1      
 245   1      
 246   1          while (1) {
 247   2              LCD_cmd(0x01);
 248   2              ret_distance();
 249   2              delay(50);
 250   2              ret_distance1();
 251   2              delay(200);
 252   2              
 253   2              if(height >= 10 && height1<= 45)
 254   2              {
 255   3                      mr = 1;
 256   3                      LCD_cmd(0x01);
 257   3                      LCD_cmd(0x80);
 258   3                      LCD_string_write("Motor is ON !!");
 259   3                      LCD_cmd(0xC0);
 260   3                      LCD_string_write("Tank1 Near Empty !!");
 261   3                      sim_init();
 262   3                      sms("Tank 1 Empty, Motor is ON");
 263   3                      
 264   3                      while(height1 <= 95)
 265   3                      {
 266   4                          mr = 1;
 267   4                          LCD_cmd(0x01);
 268   4                          LCD_cmd(0x80);
 269   4                          LCD_string_write("Motor is ON !!");
 270   4                          LCD_cmd(0xC0);
 271   4                          LCD_string_write("Filing Tank");
 272   4                          ret_distance1();
 273   4                          delay(100); 
 274   4                      } 
 275   3                        
 276   3                      mr = 0;
 277   3                      LCD_cmd(0x01);
 278   3                      LCD_cmd(0x80);
 279   3                      LCD_string_write("Motor is OFF !!");
 280   3                      LCD_cmd(0xC0);
 281   3                      LCD_string_write("Tank 1 Full");
 282   3                      ret_distance1();
 283   3                      sim_init();
 284   3                      sms("Tank 1 Full, Motor is OFF");
 285   3                  }
 286   2                  
 287   2              else if(height < 10 && height1 <= 25 )
 288   2              {
 289   3                      mr = 0;
 290   3                      LCD_cmd(0x01);
 291   3                      LCD_cmd(0x80);
 292   3                      LCD_string_write("Tank 2 Empty");
 293   3                      LCD_cmd(0xC0);
 294   3                      LCD_string_write("Tank 1 Empty");
 295   3                      sim_init();
 296   3                      sms("Both Tanks Empty");
 297   3              }
 298   2              else if(height <10 && height1 >=90 )
 299   2              {
 300   3                      mr = 0;
 301   3                      LCD_cmd(0x01);
C51 COMPILER V9.60.0.0   WATER_LEVEL_MONITORING___PUMP_CONTROLLER                          08/08/2025 22:22:17 PAGE 6   

 302   3                      LCD_cmd(0x80);
 303   3                      LCD_string_write("Tank 1 Full");
 304   3                      LCD_cmd(0xC0);
 305   3                      LCD_string_write("Tank 2 Empty");
 306   3                      sim_init();
 307   3                      sms("Tank 2 Empty");
 308   3              }
 309   2              else{}
 310   2                
 311   2              }
 312   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1370    ----
   CONSTANT SIZE    =    254    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
